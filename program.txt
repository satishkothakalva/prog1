#include<stdio.h>//call by value
int main()
{
    int a=1;
    int b=2;
    printf("before swapping a=%d,b=%d",a,b);
    swap(a,b);
    printf("after swapping a=%d,b=%d",a,b);
    return 0;

}
void swap(int a, int b)
{
    int temp;
    temp = a;
    a=b;
    b=temp;
}




#include<stdio.h>//call by reference
int main()
{
    int a=1;
    int b=2;
    printf("before swapping a=%d,b=%d",a,b);
    swap(&a,&b);
    printf("after swapping a=%d,b=%d",a,b);
    return 0;

}
void swap(int *a, int *b)
{
    int temp;
    temp = *a;
    *a=*b;
    *b=temp;
}



#include<stdio.h>//biggest element in an array
int main()
{
    int a[10];
    int i;
    printf("enter array elements");
    for(i=0;i<10;++i)
    {
        scanf("%d ",&a[i]);
    }
    for(i=1;i<10;++i){
        if(a[0] < a[i])
        a[0] = a[i];
    }
    printf("the biggest element in an array is %d",a[0]);
    return 0;
}







#include<stdio.h>
#include<stdlib.h>
int main()                         //largest element using dynamic memory allocation
{
    int  *a;
    int i;
    a = (int *)calloc(10,sizeof(int));
    printf("enter the elements in an array");
    for(i=0;i<10;++i)
    {
        printf("enter the elements %d  ",i+1);
        scanf("%d",a+i);
    }
    for(i=1;i<10;++i){
        if(*a < *(a+i))
        *a =*(a+i);
    }
    printf("the biggest element in an array is %d",*a);
    return 0;
    
}







#include<stdio.h>
#include<stdlib.h>
int main()
{
     int  *a;
    int i,si;
    a = (int *)malloc(10*sizeof(int));
    printf("enter the elements in an array");
    for(i=0;i<10;++i)
    {
        printf("enter the elements %d  ",i+1);
        scanf("%d",a+i);
    }
    printf("enter search number");
    scanf("%d",&si);
    for(int i=0;i<10;i++)
    {
        if(strcmp(si,*(a+i))
        {
        flag =1;
        break;
        }
    }
    if(flag==1)
    {
        printf("user found");
    }
    else
    {
        printf("user not found");
    }
    return 0;
}











#include<stdio.h>
struct emp {                //using malloc creating 3 objects
    int id;
    char address[30];
    char phone[10];
};
int main()
{
    struct emp *ptr;
    int i;
    ptr=(struct emp *)malloc(3*sizeof(struct emp));
    for(i=0;i<3;++i)
    {
        scanf("%d %s %s",&(ptr+i)->id,(ptr+i)->address,(ptr+i)->phone);
    }
     for(i=0;i<3;++i)
    {
        printf("%d %s %s  ",(ptr+i)->id,(ptr+i)->address,(ptr+i)->phone);
    }
    return 0;
}